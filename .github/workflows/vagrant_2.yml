# This is a basic workflow to help you get started with Actions

name: Run packer on Ubuntu

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches:
#       - main
#     tags:
#       - "v[0-9]+.[0-9]+.[0-9]+"
#   pull_request:
#     branches: [ main ]
#   schedule:
#     - cron: "27 16 */2 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  packer:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: packer
    concurrency:
      cancel-in-progress: false
      group: ${{ format('{0}-{1}', github.event_name, github.ref_name) }}    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:


      - name: Meta
        id: meta
        run: |
          BUILD_DATE_TIME=$(date --iso-8601=seconds)
          echo ::set-output name=build_date_time::$BUILD_DATE_TIME
          VERSION=$(date --date="$BUILD_DATE_TIME" '+%Y%m%d.%-H.%-M')
          TAG_NAME=$(printf 'v%s' $VERSION)
          echo ::set-output name=version::$VERSION
          echo ::set-output name=tag_name::$TAG_NAME
          BUILD_AT=$(date --date="$BUILD_DATE_TIME" --rfc-3339=seconds)
          BOX_DESCRIPTION=$(cat << EOF
          Automated build at $BUILD_AT
          Project is hosted on GitHub at: <https://github.com/game-sales-analytics/vagrant-alpine315-docker/>
          EOF
          )
          echo "box_description<<EOF" >> $GITHUB_ENV
          echo "$BOX_DESCRIPTION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV      

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0


      - name: Create Tag
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a ${{ steps.meta.outputs.tag_name }} -m ${{ steps.meta.outputs.tag_name }}
          git push --follow-tags
#         git tag -sa ${{ steps.meta.outputs.tag_name }} -m ${{ steps.meta.outputs.tag_name }}

      # validate templates
      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: alpine.pkr.hcl
      
      # build artifact
      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-force -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}'"
          target:  alpine.pkr.hcl
          # working_directory: infrastructure/packer
          
      - name: Generate Release Note
        run: |
          echo '# Release `${{ steps.meta.outputs.version }}`' > release.md
          echo '' >> release.md
          echo '## Artifacts' >> release.md
          echo '' >> release.md
          echo '- `build.checksum` contains sha512 checksums of the built Vagrant box. You can use it in your `Vagrantfile`.' >> release.md
          echo '' >> release.md
          echo '- `alpine315-docker.box` is the Vagrant VirtualBox box which can be directly downloaded and added to Vagrant boxes using:' >> release.md
          echo '' >> release.md
          echo '  ```sh' >> release.md
          echo '  vagrant box add --name xeptore/alpine315-docker /path/to/alpine315-docker.box' >> release.md
          echo '  ```' >> release.md
          echo '' >> release.md
          echo 'The box is also hosted at Vagrant Cloud and is accessible at: <https://app.vagrantup.com/xeptore/boxes/alpine315-docker>.' >> release.md
          echo '' >> release.md
          echo '## Box `SHA512`' >> release.md
          echo '' >> release.md
          echo '```sh' >> release.md
          cut -f 1 build.checksum >> release.md
          echo '```' >> release.md
          cat release.md
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            alpine315-docker.box
            license.txt
            build.checksum
          prerelease: false
          draft: false
          body_path: release.md
          name: ${{ steps.meta.outputs.tag_name }}
          tag_name: ${{ steps.meta.outputs.tag_name }}

